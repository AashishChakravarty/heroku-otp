name: Build Erlang OTP For Heroku

on:
  push:
    branches:
      - master

jobs:
  build_docker_cache:
    name: Cache The Stacks
    runs-on: ubuntu-latest

    strategy:
      matrix:
        stack:
          - heroku-18
          - heroku-20

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker Caching
        uses: satackey/action-docker-layer-caching@v0.0.8
        continue-on-error: true
        with:
          key: ${{ matrix.stack }}

      - name: Build Heroku Stack Image
        run: docker build -t ${{ matrix.stack }} - < stacks/${{ matrix.stack }}.Dockerfile

  build_erlang_versions:
    name: Build Erlang Versions
    runs-on: ubuntu-latest
    needs: build_docker_cache

    strategy:
      matrix:
        stack:
          - heroku-18
          - heroku-20
        otp:
          # - '23.1.4'
          # - '23.1.3'
          # - '23.1.2'
          # - '23.1.1'
          # - '23.1'
          # - '23.0.4'
          # - '23.0.3'
          # - '23.0.2'
          # - '23.0.1'
          # - '23.0'
          # - '22.3.4.12'
          # - '22.3.4.11'
          # - '22.3.4.10'
          # - '22.3.4.9'
          # - '22.3.4.6'
          # - '22.3.4.5'
          # - '22.3.4.4'
          # - '22.3.4.3'
          # - '22.3.4.2'
          # - '22.3.4.1'
          # - '22.3.4'
          # - '22.3.3'
          # - '22.3.2'
          # - '22.3.1'
          # - '22.3'
          # - '22.2.8'
          # - '22.2.7'
          # - '22.2.6'
          # - '22.2.5'
          # - '22.2.4'
          # - '22.2.3'
          # - '22.2.2'
          # - '22.2.1'
          # - '22.2'
          # - '22.1.8'
          # - '22.1.7'
          # - '22.1.6'
          # - '22.1.5'
          # - '22.1.4'
          # - '22.0.7'
          # - '22.0.3'
          # - '21.3.7'
          # - '21.3.3'
          # - '21.3.1'
          # - '21.3'
          # - '21.2.7'
          # - '21.2.6'
          # - '21.2.5'
          # - '21.2.4'
          # - '21.2.3'
          # - '21.2.2'
          # - '21.2.1'
          # - '21.2'
          # - '21.1.4'
          # - '21.1.2'
          # - '21.1.1'
          # - '21.1'
          # - '21.0.9'
          # - '21.0.4'
          # - '21.0.2'
          # - '21.0.1'
          # - '21.0'
          - '20.3.8.3'
          - '20.3.6'
          - '20.3.2'
          - '20.3.1'
          - '20.3'
          - '20.2.4'
          - '20.2.3'
          - '20.2.2'
          - '20.2'
          - '20.2.1'
          - '20.1.7'
          - '20.1.6'
          - '20.1.5'
          - '20.1.3'
          - '20.1'
          - '20.0'
          - '19.3'
          - '19.2'
          - '19.1.2'
          - '19.1.1'
          - '19.1'
          - '19.0.2'
          - '19.0.1'
          - '19.0'
          - '18.3'
          - '18.2.1'
          - '18.2'
          - '18.1.5'
          - '18.1.4'
          - '18.1.3'
          - '18.1.2'
          - '18.1.1'
          - '18.1'
          - '18.0.3'
          - '18.0.2'
          - '18.0.1'
          - '18.0'
          - '18.0-rc2'
          - '18.0-rc1'
          - '17.5.6.6'
          - '17.5.6.5'
          - '17.5.6.4'
          - '17.5.6.3'
          - '17.5.6.2'
          - '17.5.6.1'
          - '17.5.6'
          - '17.5.5'
          - '17.5.4'
          - '17.5.3'
          - '17.5.2'
          - '17.5.1'
          - '17.5'
          - '17.4.1'
          - '17.4'
          - '17.3.4'
          - '17.3.3'
          - '17.3.2'
          - '17.3.1'
          - '17.3'
          - '17.2.2'
          - '17.2.1'
          - '17.2'
          - '17.1.2'
          - '17.1.1'
          - '17.1'
          - '17.0.2'
          - '17.0.1'
          - '17.0'

    steps:
      - name: Release Check
        id: release-check
        shell: bash
        run: |
          wget --spider -o release-check.log -r https://github.com/heroku-elixir/otp-builds/archive/${{ matrix.otp }}-${{ matrix.stack }}.tar.gz || true
          if grep -q "no broken links" release-check.log; then
            echo "::set-output name=release-exists::true"
          else
            echo "::set-output name=release-exists::false"
          fi

      - name: Checkout
        if: ${{ steps.release-check.outputs.release-exists == 'false' }}
        uses: actions/checkout@v2

      - name: Setup Erlang Build
        if: ${{ steps.release-check.outputs.release-exists == 'false' }}
        run: |
          mkdir -p build/mount
          cd build
          wget https://github.com/erlang/otp/archive/OTP-${{ matrix.otp }}.tar.gz
          tar -zxf OTP-${{ matrix.otp }}.tar.gz
          mv otp-OTP-${{ matrix.otp }}/ mount/

      - name: Docker Caching
        if: ${{ steps.release-check.outputs.release-exists == 'false' }}
        uses: satackey/action-docker-layer-caching@v0.0.8
        continue-on-error: true
        with:
          key: ${{ matrix.stack }}

      - name: Build Heroku Stack Image
        if: ${{ steps.release-check.outputs.release-exists == 'false' }}
        run: docker build -t ${{ matrix.stack }} - < stacks/${{ matrix.stack }}.Dockerfile

      - name: Build Erlang
        if: ${{ steps.release-check.outputs.release-exists == 'false' }}
        working-directory: build
        run: |
          docker run -it -v $(pwd)/mount:/build -w /build/otp-OTP-${{ matrix.otp }} ${{ matrix.stack }} ./otp_build autoconf
          docker run -it -v $(pwd)/mount:/build -w /build/otp-OTP-${{ matrix.otp }} ${{ matrix.stack }} ./configure --with-ssl --enable-dirty-schedulers
          docker run -it -v $(pwd)/mount:/build -w /build/otp-OTP-${{ matrix.otp }} ${{ matrix.stack }} make
          docker run -it -v $(pwd)/mount:/build -w /build/otp-OTP-${{ matrix.otp }} ${{ matrix.stack }} make release

      - name: Create Tarball
        if: ${{ steps.release-check.outputs.release-exists == 'false' }}
        working-directory: build
        run: |
          mkdir out
          mv mount/otp-OTP-${{ matrix.otp }}/release/x86_64-unknown-linux-gnu/ OTP-${{ matrix.otp }}
          tar -zcf out/OTP-${{ matrix.otp }}.tar.gz OTP-${{ matrix.otp }}

      - name: Create Release
        if: ${{ steps.release-check.outputs.release-exists == 'false' }}
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ matrix.otp }}-${{ matrix.stack }}
          release_name: OTP ${{ matrix.otp }} for ${{ matrix.stack }}
          body: OTP ${{ matrix.otp }} for ${{ matrix.stack }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        if: ${{ steps.release-check.outputs.release-exists == 'false' }}
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: build/out/OTP-${{ matrix.otp }}.tar.gz
          asset_name: ${{ matrix.otp }}-${{ matrix.stack }}.tar.gz
          asset_content_type: application/gzip
